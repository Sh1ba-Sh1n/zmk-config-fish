// キーマップを更新する方法は https://o24.works/fish/guide を参照
// 視覚的に編集するには https://o24.works/fish/editor を参照


// 定義を呼んでくる
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// JIS用のキーの定義をする
#define JP_ZKHK  GRAVE        // Zenkaku ↔ Hankaku ↔ Kanji (半角 ↔ 全角 ↔ 漢字)
#define JP_MINUS MINUS        // -
#define JP_CARET EQUAL        // ^
#define JP_YEN   INT3         // ¥
#define JP_AT    LBKT         // @
#define JP_LBKT  RBKT         // [
#define JP_EISU  CAPS         // Eisū (英数)
#define JP_SEMI  SEMI         // ;
#define JP_COLON SQT          // :
#define JP_RBKT  NUHS         // ]
#define JP_COMMA COMMA        // ,
#define JP_DOT   DOT          // .
#define JP_SLASH SLASH        // /
#define JP_BSLH  INT1         // (backslash)
#define JP_MHEN  INT5         // Muhenkan (無変換)
#define JP_HENK  INT4         // Henkan (変換)
#define JP_KANA  INT2         // Katakana ↔ Hiragana ↔ Rōmaji (カタカナ ↔ ひらがな ↔ ローマ字)
#define JP_EXCL  LS(N1)       // !
#define JP_DQT   LS(N2)       // "
#define JP_HASH  LS(N3)       // #
#define JP_DLLR  LS(N4)       // $
#define JP_PRCNT LS(N5)       // %
#define JP_AMPS  LS(N6)       // &
#define JP_SQT   LS(N7)       // '
#define JP_LPAR  LS(N8)       // (
#define JP_RPAR  LS(N9)       // )
#define JP_EQUAL LS(JP_MINUS) // =
#define JP_TILDE LS(JP_CARET) // ~
#define JP_PIPE  LS(JP_YEN)   // |
#define JP_GRAVE LS(JP_AT)    // `
#define JP_LBRC  LS(JP_LBKT)  // {
#define JP_CAPS  LS(JP_EISU)  // Caps Lock
#define JP_PLUS  LS(JP_SEMI)  // +
#define JP_ASTRK LS(JP_COLON) // *
#define JP_RBRC  LS(JP_RBKT)  // }
#define JP_LT    LS(JP_COMMA) // <
#define JP_RT    LS(JP_DOT)   // >
#define JP_QMARK LS(JP_SLASH) // ?
#define JP_UNDER LS(JP_BSLH)  // _


// 特殊入力の挙動を調整できる

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

&sk {
};

&sl {
};

&caps_word {
};

&key_repeat {
};


/ {
    // 独自の入力を定義できる（上級者向け）

    behaviors {
    };

    macros {
    };

    conditional_layers {
    };


    // 複数キーの同時押しに特別の入力を設定できる
    // キー番号早見表：
    //       0  1  2  3     4  5  6  7
    // 8  9 10 11 12 13    14 15 16 17 18 19
    //   20 21 22 23          24 25 26 27
    //            28 29    30 31

    combos {
        compatible = "zmk,combos";
        timeout-ms = <100>;
        require-prior-idle-ms = <150>;

        combo_lang2 {
            key-positions = <11 12>;
            bindings = <&kp LANG2>;
        };

        combo_lang1 {
            key-positions = <15 16>;
            bindings = <&kp LANG1>;
        };

        combo_reset_L {
            key-positions = <3 8 13>;
            bindings = <&bootloader>;
        };

        combo_reset_R {
            key-positions = <4 14 19>;
            bindings = <&bootloader>;
        };

        combo_studio_unlock {
            key-positions = <20 21 22 23>;
            bindings = <&studio_unlock>;
        };
    };
    

    // キーに入力を割り当てる
    // 型（&...）は https://zmk.dev/docs/behaviors/... を参照
    // キーコードは https://zmk.dev/docs/codes/... を参照

    keymap {
        compatible = "zmk,keymap";

        layer_keymap {
            bindings = <
                        &kp L       &kp U       &kp F       &kp MINUS           &kp K       &kp W       &kp R       &kp Y       
&kp Q       &kp E       &mt LGUI I  &mt LALT A  &mt LSHFT O &kp COMMA           &kp G       &mt RSHFT T &mt RALT N  &mt RGUI S  &kp H       &kp P       
            &kp Z       &kp X       &kp C       &kp V                                       &kp D       &kp M       &kp J       &kp B       
                                                &lt 1 SPACE &mt LCTRL RET       &mt RCTRL TAB &lt 2 BSPC 
            >;
        };

        layer_math {
            bindings = <
                        &kp N1      &kp N2      &kp N3      &trans              &kp JP_CARET   &kp JP_LT      &kp JP_EQUAL   &kp JP_RT      
&kp JP_TILDE   &kp N0      &mt LGUI N4 &mt LALT N5 &mt LSHFT N6 &kp DOT     &kp MINUS   &mt RSHFT JP_PLUS     &mt RALT MINUS &mt RGUI JP_ASTRK &kp FSLH &kp JP_PRCNT
            &kp JP_DLLR    &kp N7      &kp N8      &kp N9                        &kp JP_EXCL    &kp JP_QMARK   &kp JP_COLON   &kp JP_SEMI    
                                                &none       &trans              &trans      &lt 6 BSPC 
            >;
        };

        layer_navi {
            bindings = <
                        &kp JP_LBKT    &kp JP_DQT     &kp JP_RBKT    &kp JP_AMPS                    &kp C_VOL_UP &kp ESC    &kp UP      &kp LS(CAPS) 
&kp JP_AT    &kp JP_HASH  &mt LCTRL JP_LPAR &mt LALT JP_SQT &mt LSHFT JP_RPAR &kp JP_PIPE     &kp C_VOL_DN &kp LEFT   &kp DOWN    &kp RIGHT   &kp C_BRI_UP &kp PSCRN  
            &kp INT1    &kp JP_LBRC    &kp JP_GRAVE   &kp JP_RBRC                                     &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_BRI_DN 
                                                &lt 6 SPACE  &trans              &trans      &none       
            >;
        };

        layer_mac_base {
            bindings = <
                        &kp L       &kp U       &kp F       &kp MINUS           &kp K       &kp W       &kp R       &kp Y       
&kp Q       &kp E       &mt LCTRL I &mt LALT A  &mt LSHFT O &kp COMMA           &kp G       &mt RSHFT T &mt RALT N  &mt RCTRL S &kp H       &kp P       
            &kp Z       &kp X       &kp C       &kp V                                       &kp D       &kp M       &kp J       &kp B       
                                                &lt 4 BSPC  &mt LGUI RET        &mt RGUI TAB &lt 5 SPACE 
            >;
        };

        layer_mac_math {
            bindings = <
                        &kp N1      &kp N2      &kp N3      &trans              &kp EQUAL   &kp LT      &kp UNDER   &kp GT      
&kp PLUS    &kp N0      &mt LCTRL N4 &mt LALT N5 &mt LSHFT N6 &kp DOT           &kp LS(INT1) &mt RSHFT COLON &mt RALT MINUS &mt RCTRL DQT &kp FSLH &kp PRCNT 
            &kp DLLR    &kp N7      &kp N8      &kp N9                                      &kp EXCL    &kp QMARK   &kp SQT     &kp SEMI    
                                                &none       &trans              &trans      &lt 6 SPACE 
            >;
        };

        layer_mac_navi {
            bindings = <
                        &kp RBKT    &kp AT      &kp NUHS    &kp CARET           &kp C_VOL_UP &kp ESC    &kp UP      &kp LS(CAPS) 
&kp LBKT    &kp HASH    &mt LCTRL STAR &mt LALT AMPS &mt LSHFT LPAR &kp LS(INT3) &kp C_VOL_DN &kp LEFT  &kp DOWN    &kp RIGHT   &kp C_BRI_UP &kp LS(LG(N3)) 
            &kp INT1    &kp RBRC    &kp LBRC    &kp TILDE2                                  &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_BRI_DN 
                                                &lt 6 BSPC  &trans              &trans      &none       
            >;
        };

        layer_system {
            bindings = <
                        &bt BT_SEL 4 &bt BT_CLR &bt BT_CLR_ALL &out OUT_TOG     &tog 3      &kp INS     &kp HOME    &kp PG_UP   
&kp F1      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp F6          &kp F7      &kp DEL     &kp END     &kp PG_DN   &kp K_APP   &kp F12     
            &kp F2      &kp F3      &kp F4      &kp F5                                      &kp F8      &kp F9      &kp F10     &kp F11     
                                                &none       &none               &none       &none       
            >;
        };

        layer_extra_1 {
            bindings = <
                        &none       &none       &none       &none               &none       &none       &none       &none       
&none       &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &none       
            &none       &none       &none       &none                                       &none       &none       &none       &none       
                                                &none       &none               &none       &none       
            >;
        };

        layer_extra_2 {
            bindings = <
                        &none       &none       &none       &none               &none       &none       &none       &none       
&none       &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &none       
            &none       &none       &none       &none                                       &none       &none       &none       &none       
                                                &none       &none               &none       &none       
            >;
        };

        layer_extra_3 {
            bindings = <
                        &none       &none       &none       &none               &none       &none       &none       &none       
&none       &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &none       
            &none       &none       &none       &none                                       &none       &none       &none       &none       
                                                &none       &none               &none       &none       
            >;
        };
    };
};
