// ──────────────────────────────────────────────────────────
// このファイルは ZMK の keymap 定義（.keymap / .dtsi）です。
// 使い方ガイド: https://o24.works/fish/guide
// ブラウザで編集する場合: https://o24.works/fish/editor
// ──────────────────────────────────────────────────────────


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


// ──────────────────────────────────────────────────────────
// タップ／モッドタップ等のタイミング・挙動のチューニング
//   - &mt : Mod-Tap（タップでキー、ホールドでモディファイア）
//   - &lt : Layer-Tap（タップでキー、ホールドでレイヤ）
//   - &sk : Sticky Key
//   - それぞれの tapping-term / quick-tap / idle を調整
// ──────────────────────────────────────────────────────────

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

&sk {
};

&sl {
};

&caps_word {
};

&key_repeat {
};


// ──────────────────────────────────────────────────────────
// ここからデバイスツリーのルートノード
// behaviors / macros / conditional_layers は必要に応じて追記
// ──────────────────────────────────────────────────────────
/ {
    behaviors {
        // ここにカスタム behavior を定義する場合は追記
    };

    macros {
        // ここにマクロ（&macro …）を定義する場合は追記
    };

    conditional_layers {
        // 条件付きレイヤ（モードや状態で自動切替）を追加する場合は追記
    };


    // ──────────────────────────────────────────────────────
    // Combos（同時押しで別キー）
    //
    // 物理キー位置のインデックス図（key-positions 用の参考）
    //     //       0  1  2  3     4  5  6  7
    //     // 8  9 10 11 12 13    14 15 16 17 18 19
    //     //    20 21 22 23          24 25 26 27
    //     //               28 29    30 31
    //
    // timeout-ms: 同時押しとして判定する時間
    // require-prior-idle-ms: 直前入力からの無入力時間要件
    // ──────────────────────────────────────────────────────
    combos {
        compatible = "zmk,combos";
        timeout-ms = <100>;
        require-prior-idle-ms = <150>;

        // 日本語入力切替（Windows想定）
        combo_lang2 {
            key-positions = <11 12>;
            bindings = <&kp LANG2>;  // 半角/全角 or 英数
        };

        combo_lang1 {
            key-positions = <15 16>;
            bindings = <&kp LANG1>;  // かな
        };

        // ブートローダー起動（左手側）
        combo_reset_L {
            key-positions = <3 8 13>;
            bindings = <&bootloader>;
        };

        // ブートローダー起動（右手側）
        combo_reset_R {
            key-positions = <4 14 19>;
            bindings = <&bootloader>;
        };

        // ZMK Studio のロック解除（開発・調整用）
        combo_studio_unlock {
            key-positions = <20 21 22 23>;
            bindings = <&studio_unlock>;
        };
    };
    

    // ──────────────────────────────────────────────────────
    // キーマップ
    //
    // ・behavior の書式: &kp / &mt / &lt / &tog / &bt … など
    //   参考: https://zmk.dev/docs/behaviors/overview
    // ・キーコード一覧: https://zmk.dev/docs/codes
    // ・各 layer_* は独立したレイヤ定義
    // ──────────────────────────────────────────────────────
    keymap {
        compatible = "zmk,keymap";

        // ── Layer: layer_keymap（ベース配列 / Windows系）
        layer_keymap {
            bindings = <
                        &kp L       &kp U       &kp F       &kp MINUS           &kp K       &kp W       &kp R       &kp Y       
&kp Q       &kp E       &mt LGUI I  &mt LALT A  &mt LSHFT O &kp COMMA           &kp G       &mt RSHFT T &mt RALT N  &mt RGUI S  &kp H       &kp P       
            &kp Z       &kp X       &kp C       &kp V                                       &kp D       &kp M       &kp J       &kp B       
                                                &lt 1 BSPC  &mt LCTRL RET       &mt RCTRL TAB &lt 2 SPACE
            >;
        };

        // ── Layer: layer_math（数字・記号）
        layer_math {
            bindings = <
                        &kp N1      &kp N2      &kp N3      &trans              &kp CARET   &kp LT      &kp EQUAL   &kp GT      
&kp TILDE   &kp N0      &mt LGUI N4 &mt LALT N5 &mt LSHFT N6 &kp DOT            &kp MINUS   &mt RSHFT PLUS &mt RALT MINUS &mt RGUI STAR &kp FSLH &kp PRCNT 
            &kp DLLR    &kp N7      &kp N8      &kp N9                                      &kp EXCL    &kp QMARK   &kp COLON   &kp SEMI    
                                                &none       &trans              &trans      &lt 6 SPACE 
            >;
        };

        // ── Layer: layer_navi（ナビゲーション／メディア／ブライトネス）
        layer_navi {
            bindings = <
                        &kp LBKT    &kp DQT     &kp RBKT    &kp AMPS            &kp C_VOL_UP &kp ESC    &kp UP      &kp LS(CAPS) 
&kp AT      &kp HASH    &mt LCTRL LPAR &mt LALT SQT &mt LSHFT RPAR &kp PIPE     &kp C_VOL_DN &kp LEFT   &kp DOWN    &kp RIGHT   &kp C_BRI_UP &kp PSCRN  
            &kp BSLH    &kp LBRC    &kp GRAVE   &kp RBRC                                    &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_BRI_DN 
                                                &lt 6 BSPC  &trans              &trans      &none       
            >;
        };

        // ── Layer: layer_mac_base（ベース配列 / macOS）
        layer_mac_base {
            bindings = <
                        &kp L       &kp U       &kp F       &kp MINUS           &kp K       &kp W       &kp R       &kp Y       
&kp Q       &kp E       &mt LCTRL I &mt LALT A  &mt LSHFT O &kp COMMA           &kp G       &mt RSHFT T &mt RALT N  &mt RCTRL S &kp H       &kp P       
            &kp Z       &kp X       &kp C       &kp V                                       &kp D       &kp M       &kp J       &kp B       
                                                &lt 4 BSPC  &mt LGUI RET        &mt RGUI TAB &lt 5 SPACE 
            >;
        };

        // ── Layer: layer_mac_math（数字・記号 / macOS向け）
        layer_mac_math {
            bindings = <
                        &kp N1      &kp N2      &kp N3      &trans              &kp EQUAL   &kp LT      &kp UNDER   &kp GT      
&kp PLUS    &kp N0      &mt LCTRL N4 &mt LALT N5 &mt LSHFT N6 &kp DOT           &kp LS(INT1) &mt RSHFT COLON &mt RALT MINUS &mt RCTRL DQT &kp FSLH &kp PRCNT 
            &kp DLLR    &kp N7      &kp N8      &kp N9                                      &kp EXCL    &kp QMARK   &kp SQT     &kp SEMI    
                                                &none       &trans              &trans      &lt 6 SPACE 
            >;
        };

        // ── Layer: layer_mac_navi（ナビゲーション / macOS向け）
        layer_mac_navi {
            bindings = <
                        &kp RBKT    &kp AT      &kp NUHS    &kp CARET           &kp C_VOL_UP &kp ESC    &kp UP      &kp LS(CAPS) 
&kp LBKT    &kp HASH    &mt LCTRL STAR &mt LALT AMPS &mt LSHFT LPAR &kp LS(INT3) &kp C_VOL_DN &kp LEFT  &kp DOWN    &kp RIGHT   &kp C_BRI_UP &kp LS(LG(N3)) 
            &kp INT1    &kp RBRC    &kp LBRC    &kp TILDE2                                  &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_BRI_DN 
                                                &lt 6 BSPC  &trans              &trans      &none       
            >;
        };

        // ── Layer: layer_system（BT/出力切替/ファンクション）
        layer_system {
            bindings = <
                        &bt BT_SEL 4 &bt BT_CLR &bt BT_CLR_ALL &out OUT_TOG     &tog 3      &kp INS     &kp HOME    &kp PG_UP   
&kp F1      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp F6          &kp F7      &kp DEL     &kp END     &kp PG_DN   &kp K_APP   &kp F12     
            &kp F2      &kp F3      &kp F4      &kp F5                                      &kp F8      &kp F9      &kp F10     &kp F11     
                                                &none       &none               &none       &none       
            >;
        };

        // 予備レイヤ（
